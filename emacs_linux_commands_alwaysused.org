#+TITLE:     linux常用命令汇总
#+AUTHOR:    liweilijie
#+EMAIL:     liweilijie@gmail.com
#+DATE:      2013-02-26 Tue
#+DESCRIPTION: linux常用命令
#+KEYWORDS: linux
#+CATEGORIES: linux
#+LANGUAGE:  en
#+OPTIONS:   H:3 num:t toc:t \n:nil @:t ::t |:t ^:{} -:t f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:t skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+INFOJS_OPT: view:nil toc:nil ltoc:t mouse:underline buttons:0 path:http://orgmode.org/org-info.js
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+LINK_UP:   /liweilijie
#+LINK_HOME: /liweilijie
#+XSLT:
#

* linux运维常用命令

** 查看某文件的一部分

#+BEGIN_HTML
<div class="cnblogs_Highlighter">
<pre class="brush:bash">

#如果你只想看文件的前 5 行，可以使用 head 命令，
head -5 /etc/passwd

#如果你想查看文件的后 10 行，可以使用 tail 命令，
tail -10 /etc/passwd

#查看文件中间一段，可以使用 sed 命令. 比如查看文件的第5行到第10行内容：
sed -n '5,10p' /etc/passwd


</pre>
</div>
#+END_HTML
   

-----

** 将 file.txt 里的123改为 456


#+BEGIN_HTML
<div class="cnblogs_Highlighter">
<pre class="brush:bash">

#方法1：利用sed修改
sed 's/123/456/g' file.txt > file.txt.new #修改后保存到其它文件
sed -i 's/123/456/g' file.txt #直接修改原文件.

#方法2：利用vi修改
vi file.txt
:%s/123/456/g

#注意：如果替换的文件有特殊符号如/就要用来取消。
sed -i 's//usr/local/apache2/htdocs//var/www/html/g' /usr/local/apache2/conf/httpd.conf
   
#如果只是下原有的行后添加就用&
sed -i 's/DirectoryIndex index.html index.html.var/& index.htm index.php /g' /usr/local/apache2/conf/httpd.conf


</pre>
</div>
#+END_HTML

-----

** echo 典型应用

#+BEGIN_HTML
<div class="cnblogs_Highlighter">
<pre class="brush:bash">

echo "abcdefg" | perl -lne '{$a = reverse($_); print $a;}' #把一个字符串翻转
echo bottle|rev #把一个字符串翻转

</pre>
</div>
#+END_HTML

-----

* [文件目录管理]


** 删除几天以前的所有东西(包括目录名和目录中的文件）

#+BEGIN_HTML
<div class="cnblogs_Highlighter">
<pre class="brush:bash">

find . -ctime +3 -exec rm -rf {} ;
find ./ -mtime +3 -print|xargs rm -f –r

</pre>
</div>
#+END_HTML

** 在多级目录中查找某个文件的方法

#+BEGIN_HTML
<div class="cnblogs_Highlighter">
<pre class="brush:bash">
   
find /dir -name filename.ext
du -a | grep filename.ext
locate filename.ext

</pre>
</div>
#+END_HTML


** 删除软硬连接注意点

#+BEGIN_HTML
<div class="cnblogs_Highlighter">
<pre class="brush:bash">

#删除软件连接的时候一定要记得不要在删除的文件夹后加一斜杠,
rm -f filename/
#会说这是一个文件夹不能删除
rm filename
#会提示说是否要删除这个连接。
#如果用的第一种可能会把其它文件都删除

</pre>
</div>
#+END_HTML

** 删除目录中含输入关键字的文件

#+BEGIN_HTML
<div class="cnblogs_Highlighter">
<pre class="brush:bash">

find /mnt/ebook/ -type f -exec grep "在此输入关键字" {} ; -print -exec rm {} ;

</pre>
</div>
#+END_HTML

** 在当前目录下解压 rpm 文件
#+BEGIN_HTML
<div class="cnblogs_Highlighter">
<pre class="brush:bash">

cat kernel-ntfs-2.4.20-8.i686.rpm | rpm2cpio | pax –r

</pre>
</div>
#+END_HTML

-----

* [系统与安全]

** 让用户的密码必须有一定的长度，并且符合复杂度
#+BEGIN_HTML
<div class="cnblogs_Highlighter">
<pre class="brush:bash">

vi /etc/login.defs #修改 PASS_MIN_LEN

</pre>
</div>
#+END_HTML
   


** 用 date 查询昨天的日期

#+BEGIN_HTML
<div class="cnblogs_Highlighter">
<pre class="brush:bash">

date --date='yesterday'

</pre>
</div>
#+END_HTML
   

** 查看系统信息

#+BEGIN_HTML
<div class="cnblogs_Highlighter">
<pre class="brush:bash">

cat /proc/cpuinfo # - CPU (i.e. vendor, Mhz, flags like mmx)
cat /proc/interrupts # - 中断
cat /proc/ioports #- 设备 IO端口
cat /proc/meminfo #- 内存信息(i.e. mem used, free, swap size)
cat /proc/partitions #- 所有设备的所有分区
cat /proc/pci #- PCI设备的信息
cat /proc/swaps  #- 所有 Swap 分区的信息
cat /proc/version #- Linux 的版本号相当于 uname -r
uname -a #- 看系统内核等信息

</pre>
</div>
#+END_HTML

** 让 linux自动同步时间

#+BEGIN_HTML
<div class="cnblogs_Highlighter">
<pre class="brush:bash">

vi /etc/crontab
#加上一句：
00 0 1 * * root rdate -s time.nist.gov

</pre>
</div>
#+END_HTML
   

** 如何防止某个关键文件被修改

#+BEGIN_HTML
<div class="cnblogs_Highlighter">
<pre class="brush:bash">

#在 Linux 下，有些配置文件是不允许任何人（包括 root）修改的。为了防止被误删除或修改
#可以设定该文件的“不可修改位(immutable) ”。命令如下：
 chattr +i /etc/fstab
#如果需要修改文件则采用下面的命令：
 chattr -i /etc/fstab

</pre>
</div>
#+END_HTML
   

-----

* [管理与网络]

** lsof 用法小全

#+BEGIN_HTML
<div class="cnblogs_Highlighter">
<pre class="brush:bash">

lsof abc.txt #显示开启文件 abc.txt 的进程
lsof -i :22 #知道 22 端口现在运行什么程序
lsof -c nsd #显示 nsd 进程现在打开的文件
lsof -g gid #显示归属 gid 的进程情况
lsof +d /usr/local/ #显示目录下被进程开启的文件
lsof +D /usr/local/ #同上，但是会搜索目录下的目录，时间较长
lsof -d 4 #显示使用 fd 为4 的进程
lsof -i [i] #用以显示符合条件的进程情况
#语法: lsof -i[46] [protocol][@hostname|hostaddr][:service|port]
46 --> IPv4 or IPv6
protocol --> TCP or UDP
hostname --> Internet host name
hostaddr --> IPv4 位置
service --> /etc/service中的 service name (可以不止一个)
port --> 端口号(可以不止一个)
#例子: TCP:25 - TCP and port 25
@1.2.3.4 - Internet IPv4 host address 1.2.3.4 tcp@ohaha.ks.edu.tw:ftp - TCP protocol host:ohaha.ks.edu.tw service name:ftp
lsof -n 不将 IP转换为 hostname，预设是不加上-n参数
lsof -i tcp@ohaha.ks.edu.tw:ftp -n
lsof -p 12 #看进程号为 12的进程打开了哪些文件

</pre>
</div>
#+END_HTML
   

** grep 不显示本身进程

#+BEGIN_HTML
<div class="cnblogs_Highlighter">
<pre class="brush:bash">

ps -aux|grep httpd|grep -v grep
#grep -v grep可以取消显示你所执行的 grep 本身这个进程，-v 参数是不显示所列出的进程名


</pre>
</div>
#+END_HTML
   

** 查看本机IP
#+BEGIN_HTML
<div class="cnblogs_Highlighter">
<pre class="brush:bash">

ifconfig |grep "inet" |cut -c 0-36|sed -e 's/[a-zA-Z: ]//g'
hostname –i

</pre>
</div>
#+END_HTML
   

** 更改 eth0是否混杂模式（混杂模式可以监听其它主机的信息）

#+BEGIN_HTML
<div class="cnblogs_Highlighter">
<pre class="brush:bash">

#网卡 eth0 改成混杂模式：
ifconfig eth0 promisc
#关闭混杂模式：
ifconfig eth0 –promisc

</pre>
</div>
#+END_HTML

** linux下清空 arp表的命令
#+BEGIN_HTML
<div class="cnblogs_Highlighter">
<pre class="brush:bash">

#arp -d -a(适用于 bsd)
for HOST in `arp | sed '/Address/d' | awk '{ print $1}'` ; do arp -d $HOST; done


</pre>
</div>
#+END_HTML
   

** 如何得到网卡的 MAC地址

#+BEGIN_HTML
<div class="cnblogs_Highlighter">
<pre class="brush:bash">

arp -a | awk '{print $4}'
ifconfig eth0 | head -1 | awk '{print $5}'

</pre>
</div>
#+END_HTML


** 将 top的结果输出到文件中

#+BEGIN_HTML
<div class="cnblogs_Highlighter">
<pre class="brush:bash">

top -d 2 -n 3 -b >test.txt
可以把 top 的结果每隔 2秒，打印 3次，这样后面页的进程也能够看见了

</pre>
</div>
#+END_HTML
   

** 删除文件大小为零的文件

#+BEGIN_HTML
<div class="cnblogs_Highlighter">
<pre class="brush:bash">

rm -i `find ./ -size 0`

find ./ -size 0 -exec rm {} ;

find ./ -size |xargs rm -f &非常有效

for file in * #自己定义需要删除的文件类型

do

if [ ! -s ${file} ]

then

rm ${file}

echo "rm $file Success!"

fi

done

</pre>
</div>
#+END_HTML
   

** 一次解压多个.tar.gz文件

#+BEGIN_HTML
<div class="cnblogs_Highlighter">
<pre class="brush:bash">

find ./ -name '*.tar.gz' -exec tar zxvf {} ; -print

</pre>
</div>
#+END_HTML
   

