
(("dateCreated" :datetime (20726 37984)) ("description" . "<?xml version=\"1.0\" encoding=\"utf-8\"?>
<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"
               \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">
<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"en\" xml:lang=\"en\">
<head>
<title>收集c语言常用函数</title>
<meta http-equiv=\"Content-Type\" content=\"text/html;charset=utf-8\"/>
<meta name=\"title\" content=\"收集c语言常用函数\"/>
<meta name=\"generator\" content=\"Org-mode\"/>
<meta name=\"generated\" content=\"2013-01-16 WED\"/>
<meta name=\"author\" content=\"liweilijie\"/>
<meta name=\"description\" content=\"收集平时开发时用到的一些小函数。\"/>
<meta name=\"keywords\" content=\"C\"/>
<style type=\"text/css\">
 <!--/*--><![CDATA[/*><!--*/
  html { font-family: Times, serif; font-size: 12pt; }
  .title  { text-align: center; }
  .todo   { color: red; }
  .done   { color: green; }
  .tag    { background-color: #add8e6; font-weight:normal }
  .target { }
  .timestamp { color: #bebebe; }
  .timestamp-kwd { color: #5f9ea0; }
  .right  {margin-left:auto; margin-right:0px;  text-align:right;}
  .left   {margin-left:0px;  margin-right:auto; text-align:left;}
  .center {margin-left:auto; margin-right:auto; text-align:center;}
  p.verse { margin-left: 3% }
  pre {
	border: 1pt solid #AEBDCC;
	background-color: #F3F5F7;
	padding: 5pt;
	font-family: courier, monospace;
        font-size: 90%;
        overflow:auto;
  }
  table { border-collapse: collapse; }
  td, th { vertical-align: top;  }
  th.right  { text-align:center;  }
  th.left   { text-align:center;   }
  th.center { text-align:center; }
  td.right  { text-align:right;  }
  td.left   { text-align:left;   }
  td.center { text-align:center; }
  dt { font-weight: bold; }
  div.figure { padding: 0.5em; }
  div.figure p { text-align: center; }
  div.inlinetask {
    padding:10px;
    border:2px solid gray;
    margin:10px;
    background: #ffffcc;
  }
  textarea { overflow-x: auto; }
  .linenr { font-size:smaller }
  .code-highlighted {background-color:#ffff00;}
  .org-info-js_info-navigation { border-style:none; }
  #org-info-js_console-label { font-size:10px; font-weight:bold;
                               white-space:nowrap; }
  .org-info-js_search-highlight {background-color:#ffff00; color:#000000;
                                 font-weight:bold; }
  /*]]>*/-->
</style>


</head>
<body>
<div id=\"org-div-home-and-up\" style=\"text-align:right;font-size:70%;white-space:nowrap;\">
 <a accesskey=\"h\" href=\"/liweilijie\"> UP </a>
 |
 <a accesskey=\"H\" href=\"/liweilijie\"> HOME </a>
</div>

<div id=\"preamble\">

</div>

<div id=\"content\">
<h1 class=\"title\">收集c语言常用函数</h1>


<div id=\"table-of-contents\">
<h2>Table of Contents</h2>
<div id=\"text-table-of-contents\">
<ul>
<li><a href=\"#sec-1\">1 概</a></li>
<li><a href=\"#sec-2\">2 strcasecmp()</a>
<ul>
<li><a href=\"#sec-2-1\">2.1 算法：</a></li>
<li><a href=\"#sec-2-2\">2.2 代码：</a></li>
</ul>
</li>
</ul>
</div>
</div>

<div id=\"outline-container-1\" class=\"outline-2\">
<h2 id=\"sec-1\"><span class=\"section-number-2\">1</span> 概</h2>
<div class=\"outline-text-2\" id=\"text-1\">

<p>   在平时的开发中有时候会写一些很有趣的函数，所以在这时记录一下。
</p>
</div>

</div>

<div id=\"outline-container-2\" class=\"outline-2\">
<h2 id=\"sec-2\"><span class=\"section-number-2\">2</span> strcasecmp()</h2>
<div class=\"outline-text-2\" id=\"text-2\">



</div>

<div id=\"outline-container-2-1\" class=\"outline-3\">
<h3 id=\"sec-2-1\"><span class=\"section-number-3\">2.1</span> 算法：</h3>
<div class=\"outline-text-3\" id=\"text-2-1\">

<p>   很简单，先将其转为小写，再进行统一比较。
</p>
</div>

</div>

<div id=\"outline-container-2-2\" class=\"outline-3\">
<h3 id=\"sec-2-2\"><span class=\"section-number-3\">2.2</span> 代码：</h3>
<div class=\"outline-text-3\" id=\"text-2-2\">


    <div class=\"cnblogs_Highlighter\">
    <pre class=\"brush:cpp\">

     /* Compare S1 and S2, ignoring case, returning less than, equal to or
       greater than zero if S1 is lexicographically less than,
       equal to or greater than S2.  */
    int
    strcasecmp (const char *s1, const char *s2)
    {
      register const unsigned char *p1 = (const unsigned char *) s1;
      register const unsigned char *p2 = (const unsigned char *) s2;
      unsigned char c1, c2;

      if (p1 == p2)
        return 0;

      do
        {
          c1 = tolower (*p1++);
          c2 = tolower (*p2++);
          if (c1 == '\\0')
            break;
        }
      while (c1 == c2);

      return c1 - c2;
    }


    </pre>
    </div>


<p>
另外一个strncasecmp():
</p>


<div class=\"cnblogs_Highlighter\">
<pre class=\"brush:cpp\">

/* Compare no more than N characters of S1 and S2,
   ignoring case, returning less than, equal to or
   greater than zero if S1 is lexicographically less
   than, equal to or greater than S2.  */
int
strncasecmp (const char *s1, const char *s2, size_t n)
{
  register const unsigned char *p1 = (const unsigned char *) s1;
  register const unsigned char *p2 = (const unsigned char *) s2;
  unsigned char c1, c2;

  if (p1 == p2 || n == 0)
    return 0;

  do
    {
      c1 = tolower (*p1++);
      c2 = tolower (*p2++);
      if (c1 == '\\0' || c1 != c2)
        return c1 - c2;
    } while (--n > 0);

  return c1 - c2;
}


</pre>
</div>


</div>
</div>
</div>
</div>

<div id=\"postamble\">
<p class=\"date\">Date: 2013-01-16 WED</p>
<p class=\"author\">Author: liweilijie</p>
<p class=\"creator\"><a href=\"http://orgmode.org\">Org</a> version 7.9.2 with <a href=\"http://www.gnu.org/software/emacs/\">Emacs</a> version 23</p>
<a href=\"http://validator.w3.org/check?uri=referer\">Validate XHTML 1.0</a>

</div>
</body>
</html>
") ("title" . "收集c语言常用函数") ("categories" "[随笔分类]C") ("enclosure" ("length" . 0)) ("link" . "http://www.cnblogs.com/liweilijie/archive/2013/01/16/2862487.html") ("permalink" . "http://www.cnblogs.com/liweilijie/archive/2013/01/16/2862487.html") ("postid" . "2862487") ("source") ("userid" . "-2"))
